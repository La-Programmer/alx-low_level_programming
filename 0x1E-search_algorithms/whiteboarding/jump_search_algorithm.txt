JUMP SEARCH ALGORITHM

Inputs:
Given an array {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
array_size = 10, jump_size = sqrt(10) = 3.16...., value = 8
Type cast jump_size to an integer jump_size = 3

Expected output: (The first index where the value is found)

Process:

Declare and low and high pointers and other necessary variable;
    low = 0, high = jump_size, result = -1, i;

If array == NULL
    return result

While (low < size)
    Check if the value is between array[low] and array[high];
        if (value >= array[low] && value < array[high])
            Print that the value has been found between indexes low and high
            Perform a linear search on that jump block;
                for (i = low; i < high; i++)
                    if (array[i] == value)
                        result = i;
            Return the result variable
                return result
        else if (value >= array[low] && high > size)
            Perform linear search between low pointer and array size - 1
                for (i = low; i < size; i++)
                    if (array[i] == value)
                        result = i;
            Return the result variable
                return result
        else
            low += jump_size
            high += jump_size
return result
