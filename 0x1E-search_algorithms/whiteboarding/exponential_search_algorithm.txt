EXPONENTIAL SEARCH ALGORITHM
The time complexity is O(log(n))
It works better when the set it is checking is an infinite one (e.g; array of infinite size)
It works better than binary search when the element to find is close to the beginning of the array

INPUTS; array, size, value.
EXPECTED OUTPUT; The first index where value is found

PROCESS;
Declare variables; i, result = -1

Check if i has gone out of bounds and if the value is within the current range of comparison
while (i < n && array[i] <= value)
    Set i to i * 2
    i *= 2;
Find the binary search where low = i/2 & high = min(i, n - 1)
result = binary_search(array, low, high, value)